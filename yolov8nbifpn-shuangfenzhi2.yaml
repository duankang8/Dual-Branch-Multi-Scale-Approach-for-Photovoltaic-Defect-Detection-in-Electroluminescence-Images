# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 12  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  #s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  #m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  #l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  #x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  # 单通道输入
  - [ -1, 1, Conv, [1, 1, 1, 0] ]  # 0-P1/2, 1x1 Conv to merge RGB channels to single channel
  # 全局分支
  - [ -1, 1, Conv, [64, 7, 2, 3] ]  # 1-Global branch: large kernel Conv (7x7) for global feature extraction
  - [ -1, 1, Conv, [128, 3, 2] ]  # 2-Global branch: reduce spatial size
  - [ -1, 3, LAC2f, [128, True] ]  # 3-Global branch: C2fca layer for feature extraction and integration
  - [ -1, 1, nn.Upsample, [None, 2, 'nearest'] ]  # 4-Global branch: Upsample by 2x
  # 局部分支
  - [ -1, 1,  Conv, [64, 3, 2] ]  # 5-Local branch: small kernel Conv (3x3) for local feature extraction
  - [ -1, 1, Conv, [128, 3, 2] ]  # 6-Local branch: reduce spatial size
  - [ -1, 3, LAC2f, [128, True] ]  # 7-Local branch: C2fca layer for feature extraction and integration
  - [ -1, 1, nn.Upsample, [None, 2, 'nearest'] ]  # 8-Local branch: Upsample by 2x
  # 特征融合
  - [ [-1, 4], 1, Concat, [1] ]  # 9-Concat global and local features (from layers -1 and 5)
  - [ -1, 1, Conv, [256, 1, 1] ]  # 10-Fuse the concatenated features with 1x1 GhostConv
  # 后续层
  - [-1, 1, Conv, [ 256, 3, 2 ]]  # 11-P2/4
  - [-1, 6, C2f, [256, True]]                           # C2fca中换成了BCSP
  - [-1, 1, Conv, [ 512, 3, 2 ]]  # 13-P3/8
  - [-1, 6, C2f, [512, True]]
  - [-1, 1, Conv, [ 1024, 3, 2 ]]  # 15-P4/16
  - [-1, 3, C2f, [1024, True]]
 # - [-1, 1, Conv, [ 3, 1, 1 ] ]            #换回了三通道输入RGB输入
  - [-1, 1, CLDP , [ 1024, 5 ]]  # 18-SPPFCSPC      PFSCS
# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 13], 1, Concat_BiFPN, [1]]  # cat backbone P4
  - [-1, 3, C2f, [512]]  # 21

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]
  - [[-1, 11], 1, Concat_BiFPN, [1]]  # cat backbone P3
  - [-1, 3, LAC2f, [256]]  # 24 (P3/8-small)                   C2f中换成了BCSP

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 19], 1, Concat_BiFPN, [1]]  # cat head P4
  - [-1, 3, LAC2f, [512]]  # 27 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 16], 1, Concat_BiFPN, [1]]  # cat head P5
  - [-1, 3, LAC2f, [1024]]  # 30 (P5/32-large)

  - [[22, 25, 28], 1, Detect, [nc]]  # Detect(P3, P4, P5)









